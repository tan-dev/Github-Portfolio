{"version":3,"sources":["component/Repos.js","component/Heerosection.js","component/UserPage.js","App.js","reportWebVitals.js","index.js"],"names":["Repos","repos_url","useState","repos","setRepos","fetchrepo","a","Axios","get","data","console","log","useEffect","className","map","repo","name","href","html_url","id","Heerosection","UserPage","user","src","avatar_url","login","company","location","email","bio","App","query","setQuery","setUser","fetchDetails","alert","value","onChange","e","target","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAiCeA,MA9Bf,YAA6B,IAAbC,EAAY,EAAZA,UAEZ,EAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAE,8BAAAC,EAAA,sEACOC,IAAMC,IAAIP,GADjB,gBACNQ,EADM,EACNA,KACPL,EAASK,GACTC,QAAQC,IAAI,YAAYF,GAHX,2CAAF,qDAUf,OAJAG,qBAAU,WACNP,MACD,CAACJ,IAGA,8BACI,sBAAKY,UAAW,cAAhB,UACA,oBAAIA,UAAU,cAAd,qBACKV,EAAMW,KAAI,SAAAC,GAAI,OACX,sBAAKF,UAAU,aAAf,UACI,4BAAIE,EAAKC,OAET,4BAAG,mBAAGC,KAAMF,EAAKG,SAAd,2BAH0BH,EAAKI,aCV3CC,MARf,WACI,OACI,qBAAKP,UAAU,OAAf,SACI,oBAAIA,UAAU,UAAd,iCCyCGQ,MA7Cf,YAA2B,IAARC,EAAO,EAAPA,KACf,OACI,sBAAKT,UAAU,wBAAf,UACI,qBAAKA,UAAU,cAAcU,IAAKD,EAAKE,aACvC,oBAAIX,UAAU,QAAd,SAAuBS,EAAKG,QAC5B,qBAAKZ,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAW,cAAhB,UACI,4CACA,+BAAM,mBAAGI,KAAMK,EAAKJ,SAAd,4BAEV,sBAAKL,UAAW,aAAhB,UACI,6CACA,+BAAOS,EAAKrB,eAEhB,sBAAKY,UAAW,aAAhB,UACI,wCACA,+BAAOS,EAAKN,UAEhB,sBAAKH,UAAW,aAAhB,UACI,2CACA,+BAAOS,EAAKI,aAEhB,sBAAKb,UAAW,aAAhB,UACI,4CACA,+BAAOS,EAAKK,cAEhB,sBAAKd,UAAW,aAAhB,UACI,yCACA,+BAAOS,EAAKM,WAEhB,sBAAKf,UAAW,aAAhB,UACI,uCACA,+BAAOS,EAAKO,kBCGrBC,MAhCf,WAEE,MAAuB5B,mBAAS,IAAhC,mBAAO6B,EAAP,KAAaC,EAAb,KACA,EAAsB9B,mBAAS,MAA/B,mBAAOoB,EAAP,KAAaW,EAAb,KAGMC,EAAY,uCAAG,8BAAA5B,EAAA,+EAEIC,IAAMC,IAAN,uCAA0CuB,IAF9C,gBAEVtB,EAFU,EAEVA,KACPwB,EAAQxB,GACRC,QAAQC,IAAIF,EAAKa,MAJA,gDAMjBa,MAAM,mCANW,yDAAH,qDAWlB,OACE,gCACA,uBAAOhB,GAAG,YAAYiB,MAAOL,EAAOM,SAAU,SAAAC,GAAC,OAAEN,EAASM,EAAEC,OAAOH,QAAQI,YAAY,oBACvF,wBAAQrB,GAAG,SAASsB,QAASP,EAA7B,uBACE,cAAC,EAAD,IAECZ,EAAO,cAAC,EAAD,CAAUA,KAAMA,IACrBZ,QAAQC,IAAI,MAEdW,EAAO,cAAC,EAAD,CAAOrB,UAAWqB,EAAKrB,YAAe,SCrBrCyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dfc2ffcd.chunk.js","sourcesContent":["import React,{useState,useEffect}  from 'react'\nimport Axios from \"axios\";\n\nfunction Repos({repos_url}) {\n\n    const [repos, setRepos]= useState([])\n\n    const fetchrepo= async ()=>{\n        const {data}= await Axios.get(repos_url);\n        setRepos(data)\n        console.log(\"repo data\"+data);\n    }\n\n    useEffect(() => {\n        fetchrepo();\n    }, [repos_url])\n\n    return (\n        <div>\n            <div className =\"reposrender\">\n            <h1 className=\"text-center\">Project</h1>\n                {repos.map(repo=>(\n                    <div className=\"repos-link\" key={repo.id}>\n                        <p>{repo.name}</p>\n                        {/* <p>Hello</p> */}\n                        <p><a href={repo.html_url}>Goto-Link</a></p>\n                    </div>\n                ))} \n            </div>                \n        </div>\n    )\n}\n\nexport default Repos\n","import React from 'react'\nimport '../App.css'\n\n\nfunction Heerosection() {\n    return (\n        <div className=\"hero\" >\n            <h1 className='heading'>Github PortFolio</h1>\n        </div>\n    )\n}\n\nexport default Heerosection\n","import React from 'react'\nimport '../App.css'\n\nfunction UserPage({user}) {\n    return (\n        <div className=\"text-center mt-3 mb-4\">\n            <img className='profile-pic' src={user.avatar_url}/>\n            <h2 className=\"login\">{user.login}</h2>\n            <div className=\"userdata\">\n                <div className=\"usertable\">\n                    <div className= 'repos-link '>\n                        <span>html_url</span>\n                        <span><a href={user.html_url}>goto link</a></span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>repos_url</span>\n                        <span>{user.repos_url}</span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>name</span>\n                        <span>{user.name}</span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>company</span>\n                        <span>{user.company}</span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>location</span>\n                        <span>{user.location}</span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>email</span>\n                        <span>{user.email}</span>\n                    </div>\n                    <div className= 'repos-link'>\n                        <span>bio</span>\n                        <span>{user.bio}</span>\n                    </div>\n                    \n                </div>\n                \n                {/* <hr/> */}\n            </div>\n\n        </div>\n    )\n}\n\nexport default UserPage\n","import React,{useState} from 'react'\nimport '../src/App.css'\nimport Repos from './component/Repos'\nimport Axios from 'axios'\nimport Heerosection from './component/Heerosection'\nimport UserPage from './component/UserPage'\n\nfunction App() {\n\n  const [query,setQuery]=useState('')\n  const [user, setUser]=useState(null)\n\n\n  const fetchDetails = async ()=>{\n    try {\n      const {data} = await Axios.get(`https://api.github.com/users/${query}`);\n      setUser(data)\n      console.log(data.user)\n    } catch (error) {\n      alert(\"No user find with this username\")\n    }\n  }\n  \n\n  return (\n    <div>\n    <input id=\"inputuser\" value={query} onChange={e=>setQuery(e.target.value)} placeholder=\"search Git User\" />\n    <button id=\"Submit\" onClick={fetchDetails} >click me </button>\n      <Heerosection />\n      {/* <UserPage/> */}\n      {user ? <UserPage user={user} />\n       : console.log(\"no\")}\n\n      {user ? <Repos repos_url={user.repos_url}/> : null}\n\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}